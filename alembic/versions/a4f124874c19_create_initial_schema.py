"""create initial schema

Revision ID: a4f124874c19
Revises: 
Create Date: 2025-05-23 21:08:36.923360

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes 


# revision identifiers, used by Alembic.
revision: str = 'a4f124874c19'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clasificacion_residuo',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('clasificacion_residuo', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_clasificacion_residuo_id'), ['id'], unique=False)

    op.create_table('departamento',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('nombre_departamento', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('departamento', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_departamento_id'), ['id'], unique=False)

    op.create_table('estado_cotizacion',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('estado_cotizacion', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_estado_cotizacion_id'), ['id'], unique=False)

    op.create_table('estado_solicitud',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('estado_solicitud', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_estado_solicitud_id'), ['id'], unique=False)

    op.create_table('estado_transporte',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('estado_transporte', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_estado_transporte_id'), ['id'], unique=False)

    op.create_table('puerto',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('ubicacion', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('puerto', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_puerto_id'), ['id'], unique=False)

    op.create_table('rol',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tipo_embarcacion',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tipo_embarcacion', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tipo_embarcacion_id'), ['id'], unique=False)

    op.create_table('tipo_tratamiento',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tipo_tratamiento', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tipo_tratamiento_id'), ['id'], unique=False)

    op.create_table('transportista',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('ruc', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('razon_social', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('direccion', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('telefono', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('correo', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('tipo_transporte', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('transportista', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_transportista_id'), ['id'], unique=False)

    op.create_table('unidad_medida',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('codigo', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('unidad_medida', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_unidad_medida_id'), ['id'], unique=False)

    op.create_table('embarcacion',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('matricula', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('id_tipo_embarcacion', sa.Uuid(), nullable=False),
    sa.Column('capacidad_carga', sa.Float(), nullable=True),
    sa.Column('capitan', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('estado', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('observaciones', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_tipo_embarcacion'], ['tipo_embarcacion.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('embarcacion', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_embarcacion_id'), ['id'], unique=False)

    op.create_table('provincia',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('nombre_provincia', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('iddepartamento', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['iddepartamento'], ['departamento.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('provincia', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_provincia_id'), ['id'], unique=False)

    op.create_table('tipo_residuo',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id_clasificacion', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_clasificacion'], ['clasificacion_residuo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tipo_residuo', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tipo_residuo_id'), ['id'], unique=False)

    op.create_table('usuario',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('correo', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('clave', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('id_rol', sa.Uuid(), nullable=False),
    sa.Column('estado', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_rol'], ['rol.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('distrito',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('nombre_distrito', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('ubigeo', sqlmodel.sql.sqltypes.AutoString(length=6), nullable=True),
    sa.Column('idprovincia', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['idprovincia'], ['provincia.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('distrito', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_distrito_id'), ['id'], unique=False)

    op.create_table('registro_residuo',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('nombre_residuo', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('id_tipo_residuo', sa.Uuid(), nullable=False),
    sa.Column('id_unidad', sa.Uuid(), nullable=False),
    sa.Column('observaciones', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_tipo_residuo'], ['tipo_residuo.id'], ),
    sa.ForeignKeyConstraint(['id_unidad'], ['unidad_medida.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('registro_residuo', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_registro_residuo_id'), ['id'], unique=False)

    op.create_table('ruta',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('id_embarcacion', sa.Uuid(), nullable=False),
    sa.Column('id_puerto_origen', sa.Uuid(), nullable=False),
    sa.Column('id_puerto_destino', sa.Uuid(), nullable=False),
    sa.Column('fecha_salida', sa.Date(), nullable=True),
    sa.Column('fecha_llegada', sa.Date(), nullable=True),
    sa.Column('estado', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_embarcacion'], ['embarcacion.id'], ),
    sa.ForeignKeyConstraint(['id_puerto_destino'], ['puerto.id'], ),
    sa.ForeignKeyConstraint(['id_puerto_origen'], ['puerto.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('ruta', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_ruta_id'), ['id'], unique=False)

    op.create_table('generador_residuo',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('ruc', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('razon_social', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('direccion', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('id_distrito', sa.Uuid(), nullable=False),
    sa.Column('dni_responsable', sqlmodel.sql.sqltypes.AutoString(length=15), nullable=True),
    sa.Column('nombre_responsable', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('telefono', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('correo', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_distrito'], ['distrito.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('generador_residuo', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_generador_residuo_id'), ['id'], unique=False)

    op.create_table('tratamiento',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('id_registro_residuo', sa.Uuid(), nullable=False),
    sa.Column('id_tipo_tratamiento', sa.Uuid(), nullable=False),
    sa.Column('observaciones', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fecha_tratamiento', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_registro_residuo'], ['registro_residuo.id'], ),
    sa.ForeignKeyConstraint(['id_tipo_tratamiento'], ['tipo_tratamiento.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tratamiento', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tratamiento_id'), ['id'], unique=False)

    op.create_table('orden_traslado',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('id_residuo', sa.Uuid(), nullable=False),
    sa.Column('id_generador', sa.Uuid(), nullable=False),
    sa.Column('id_transportista', sa.Uuid(), nullable=False),
    sa.Column('direccion_recojo', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('direccion_destino', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('cantidad', sa.Float(), nullable=False),
    sa.Column('fecha_generacion', sa.DateTime(), nullable=False),
    sa.Column('fecha_recoleccion', sa.DateTime(), nullable=True),
    sa.Column('fecha_entrega', sa.DateTime(), nullable=True),
    sa.Column('nota', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_generador'], ['generador_residuo.id'], ),
    sa.ForeignKeyConstraint(['id_residuo'], ['registro_residuo.id'], ),
    sa.ForeignKeyConstraint(['id_transportista'], ['transportista.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('solicitud_cotizacion',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('id_generador', sa.Uuid(), nullable=False),
    sa.Column('id_tipo_residuo', sa.Uuid(), nullable=False),
    sa.Column('cantidad_estimada', sa.Float(), nullable=False),
    sa.Column('unidad', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('fecha_solicitud', sa.Date(), nullable=False),
    sa.Column('id_puerto', sa.Uuid(), nullable=False),
    sa.Column('id_estado_solicitud', sa.Uuid(), nullable=False),
    sa.Column('observaciones', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_estado_solicitud'], ['estado_solicitud.id'], ),
    sa.ForeignKeyConstraint(['id_generador'], ['generador_residuo.id'], ),
    sa.ForeignKeyConstraint(['id_puerto'], ['puerto.id'], ),
    sa.ForeignKeyConstraint(['id_tipo_residuo'], ['tipo_residuo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cotizacion',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('id_solicitud', sa.Uuid(), nullable=False),
    sa.Column('dirigido_a', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('objetivo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('alcance', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('forma_pago', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('precio_total', sa.Float(), nullable=False),
    sa.Column('detalle_servicios', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fecha_emision', sa.Date(), nullable=False),
    sa.Column('fecha_validez', sa.Date(), nullable=False),
    sa.Column('id_estado_cotizacion', sa.Uuid(), nullable=False),
    sa.Column('observaciones', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_estado_cotizacion'], ['estado_cotizacion.id'], ),
    sa.ForeignKeyConstraint(['id_solicitud'], ['solicitud_cotizacion.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trazabilidad',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('id_orden', sa.Uuid(), nullable=False),
    sa.Column('id_estado', sa.Uuid(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('nota', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_estado'], ['estado_transporte.id'], ),
    sa.ForeignKeyConstraint(['id_orden'], ['orden_traslado.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('trazabilidad')
    op.drop_table('cotizacion')
    op.drop_table('solicitud_cotizacion')
    op.drop_table('orden_traslado')
    with op.batch_alter_table('tratamiento', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tratamiento_id'))

    op.drop_table('tratamiento')
    with op.batch_alter_table('generador_residuo', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_generador_residuo_id'))

    op.drop_table('generador_residuo')
    with op.batch_alter_table('ruta', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ruta_id'))

    op.drop_table('ruta')
    with op.batch_alter_table('registro_residuo', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_registro_residuo_id'))

    op.drop_table('registro_residuo')
    with op.batch_alter_table('distrito', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_distrito_id'))

    op.drop_table('distrito')
    op.drop_table('usuario')
    with op.batch_alter_table('tipo_residuo', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tipo_residuo_id'))

    op.drop_table('tipo_residuo')
    with op.batch_alter_table('provincia', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_provincia_id'))

    op.drop_table('provincia')
    with op.batch_alter_table('embarcacion', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_embarcacion_id'))

    op.drop_table('embarcacion')
    with op.batch_alter_table('unidad_medida', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_unidad_medida_id'))

    op.drop_table('unidad_medida')
    with op.batch_alter_table('transportista', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_transportista_id'))

    op.drop_table('transportista')
    with op.batch_alter_table('tipo_tratamiento', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tipo_tratamiento_id'))

    op.drop_table('tipo_tratamiento')
    with op.batch_alter_table('tipo_embarcacion', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tipo_embarcacion_id'))

    op.drop_table('tipo_embarcacion')
    op.drop_table('rol')
    with op.batch_alter_table('puerto', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_puerto_id'))

    op.drop_table('puerto')
    with op.batch_alter_table('estado_transporte', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_estado_transporte_id'))

    op.drop_table('estado_transporte')
    with op.batch_alter_table('estado_solicitud', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_estado_solicitud_id'))

    op.drop_table('estado_solicitud')
    with op.batch_alter_table('estado_cotizacion', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_estado_cotizacion_id'))

    op.drop_table('estado_cotizacion')
    with op.batch_alter_table('departamento', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_departamento_id'))

    op.drop_table('departamento')
    with op.batch_alter_table('clasificacion_residuo', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_clasificacion_residuo_id'))

    op.drop_table('clasificacion_residuo')
    # ### end Alembic commands ###
